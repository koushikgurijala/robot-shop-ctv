version: '3'
services:
  mongodb:
    build:
      context: mongo
    image: rs-mongodb
    networks:
      - robot-shop
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  redis:
    image: redis:4.0.6
    networks:
      - robot-shop
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  rabbitmq:
    image: rabbitmq:3.7-management-alpine
    networks:
      - robot-shop
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  catalogue:
    build:
      context: catalogue
    image: /rs-catalogue
    depends_on:
      - mongodb
    networks:
      - robot-shop
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  user:
    build:
      context: user
    image: rs-user
    depends_on:
      - mongodb
      - redis
    networks:
      - robot-shop
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  cart:
    build:
      context: cart
    image: rs-cart
    depends_on:
      - redis
    networks:
      - robot-shop
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  mysql:
    build:
      context: mysql
    image: rs-mysql-db
    cap_add:
      - NET_ADMIN
    networks:
      - robot-shop
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  shipping:
    build:
      context: shipping
    image: rs-shipping
    depends_on:
      - mysql
    networks:
      - robot-shop
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  ratings:
    build:
      context: ratings
    image: rs-ratings
    networks:
      - robot-shop
    depends_on:
      - mysql
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  payment:
    build:
      context: payment
    image: rs-payment
    depends_on:
      - rabbitmq
    networks:
      - robot-shop
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  dispatch:
    build:
      context: dispatch
    image: rs-dispatch
    depends_on:
      - rabbitmq
    networks:
      - robot-shop
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  web:
    build:
      context: web
    image: rs-web
    depends_on:
      - catalogue
      - user
      - shipping
      - payment
    ports:
      - "8080:8080"
    networks:
      - robot-shop
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    # Uncomment to enable Instana EUM
    # environment:
      # INSTANA_EUM_KEY: <your eum key here>

networks:
  robot-shop:

