name: CI

on:
  workflow_call:
    inputs:
      trigger_id:
        required: true
        type: string
      pull_request_number_1:
        required: true
        type: string
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '.github/workflows/*yaml'
      - 'readme/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - '.github/workflows/*yaml'
      - 'readme/**'
      
  workflow_dispatch:

jobs:
  docker:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        if: failure()
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        if: always()
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: |
          echo "$RUNNER_CONTEXT"
          echo "${{ inputs.pull_request_number_1 }}"
          echo "Current Path is: `pwd`"
          touch abc.txt
          touch xyz.txt
      - name: Checkout
        uses: actions/checkout@v2
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: ./*.json.zip

  #    - name: Checkout
  #      uses: actions/checkout@v2

  #    - name: Login to Docker Hub
  #      uses: docker/login-action@v1
  #      with:
  #        username: "${{ secrets.DOCKERHUB_USER }}"
  #        password: "${{ secrets.DOCKERHUB_TOKEN }}"
      
  #    - name: Setup Docker Buildx
  #      uses: docker/setup-buildx-action@v1

 #     - name: Build Docker Images
 #       id: docker-builder
 #       run: |
 #         echo "-----Building Docker Images-----"
 #         docker-compose -f docker-compose.yaml build
      
 #     - name: List Docker Images
 #       run: | 
 #         echo ${{ steps.docker-builder.outputs.name }}
 #         docker images ls
